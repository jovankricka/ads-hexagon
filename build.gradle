plugins {
    id "org.springframework.boot" version "2.6.7"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.openapi.generator" version "5.3.0"
    id "com.google.protobuf" version "0.8.18"
    id "java"
}

group = "com.theannotatedhexagon"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

repositories {
    mavenCentral()
    maven { url "https://repo1.maven.org/maven2" }
}

dependencies {
    implementation "org.openapitools:openapi-generator-gradle-plugin:5.4.0"
    implementation "org.openapitools:jackson-databind-nullable:0.2.2"
    implementation "io.springfox:springfox-swagger2:3.0.0"

    implementation "com.google.protobuf:protobuf-java:3.20.1"
    implementation "io.grpc:grpc-all:1.46.0"
    implementation "net.devh:grpc-server-spring-boot-starter:2.13.1.RELEASE"

    implementation "org.springframework.boot:spring-boot-starter-web:2.6.7"
    implementation "org.springframework.boot:spring-boot-starter-log4j2"
    modules {
        module("org.springframework.boot:spring-boot-starter-logging") {
            replacedBy("org.springframework.boot:spring-boot-starter-log4j2", "Use Log4j2 instead of Logback")
        }
    }

    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

configurations {
    implementation {
        exclude group: "org.slf4j", module: "slf4j-simple"
    }
}

tasks.named("test") {
    useJUnitPlatform()
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/src/main/openapi/rest_api.yaml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "com.theannotatedhexagon.adsservice.api"
    modelPackage = "com.theannotatedhexagon.adsservice.api.models"
    configOptions = [
            dateLibrary  : "java8",
            interfaceOnly: "true"
    ]
}

sourceSets.main.java.srcDir "${buildDir}/generated/src/main/java"
sourceSets.main.java.srcDir "${buildDir}/generated/source/proto/main/grpc"
sourceSets.main.java.srcDir "${buildDir}/generated/source/proto/main/java"

apply plugin: "org.openapi.generator"
compileJava.dependsOn tasks.openApiGenerate

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.1"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.25.0"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

apply plugin: "com.google.protobuf"